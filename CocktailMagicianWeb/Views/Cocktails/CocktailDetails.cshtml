@model CocktailViewModel
@{
    ViewData["Title"] = "CocktailDetails";
    <style>

        img {
            max-width: 100%;
            height: auto;
        }

        body {
            background-image: url('../../images/grandhotel_2-1024x683.jpg');
            background-size: cover;
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        .margingaps {
            margin: 5px;
        }

        h2 {
            margin-top: 50px;
            margin-left: 20px;
            font-size: 50px;
        }

        .BackgroundOpacity {
            border-radius: 16px;
            background-color: rgba(255,250,250,0.8);
            padding: 35px 35px;
            margin: 20px;
        }

        tr {
            background-color: #f2f2f2
        }

        th {
            background-color: #ff0000;
            color: white;
        }

           .buttonReview {
            margin: 5px;
            width: 80%;
        }

        .barDesc {
            background-color: #ff0000;
            color: white;
        }
    </style>
    <link href="~/css/CocktailDetailsGrid.css" rel="stylesheet" />
}





<h2 class="cola">Cocktail Details</h2>

<div class="grid-container">
    <div class="desctipion BackgroundOpacity">
        <div class="picture margingaps">
            @if (Model.Picture != null)
            {
                <img src="data:image/jpg;base64,@(Html.Raw(Convert.ToBase64String(Model.Picture)))" width="500" height="390" />

            }
            else
            {
                <img src="~/images/no-image-icon-6.png" width="230" height="172" />
            }
        </div>
        <div class="googlemaps margingaps">

        </div>
        <div class="info margingaps">
            <table class="table table-hover">
                @if (Model != null)
                {
                    <tr>
                        <td class="barDesc">Name:</td>
                        <td>
                            @Model.Name
                        </td>
                    </tr>
                    <tr>
                        <td class="barDesc">Rated:</td>
                        <td>
                            @Model.Rating
                        </td>

                    </tr>
                    <tr>
                        <td class="barDesc">Ingredients:</td>
                        <td>

                            @foreach (var ingredient in Model.Ingredients)
                            {
                                <p>
                                    @ingredient
                                </p>
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="buttons">
            @if (this.User.IsInRole("CocktailMagician") || this.User.IsInRole("BarCralwer"))
            {
                <button class="btn buttonReview" style="background-color:#ff0000; color:white" onclick="location.href='@Url.Action("LeaveCocktailReview", "Reviews", new { Id = Model.Id })'">Leave Review</button>
            }
            <button class="btn buttonReview" style="background-color:#ff0000; color:white" id="Load-Cocktails-Reviews" data-cocktail="@Model.Id">Load Reviews</button>

        </div>
        <div class="bars margingaps">
            <table class="table-hover">
                <th>Available In:</th>
                <tr>
                    <td id="InputBars">
                        @foreach (var bar in Model.Bars)
                        {
                            <p class="matataHakuna">@bar</p>
                        }
                    </td>
                </tr>

            </table>
            @if (Model.Bars.Count == 10)
            {
                <button id="load-more-Bars" data-id="@Model.Id">Load More</button>
            }
        </div>
    </div>
    <div id="cocktailCommentBox" class="comments">

    </div>
</div>